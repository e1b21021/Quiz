「みんクイ」のセットアップマニュアル  チーム番号：6

〇サーバのアクセス
$ ssh isdev24@150.89.233.206
⇒アクセスが完了するとメッセージが表示される

➢Team番号ごとのサーバーにアクセスする
⇒私たちのチームのTeam番号が6であるので、
 IPアドレスは150.89.233.206である。

〇sshアクセスログを確認
$ sudo cat /var/log/auth.log

⇒次に、以下のコードが表示され、パスワードが求められる
 [sudo] password for isdev24:
➢パスワードはTeam番号ごとに用意されている。
パスワードは"isDev24?XXX"
XXXはIPアドレスの第四オクテットと同じ
⇒よって私たちのチームでは"isDev24?206"を使用する

〇タイムゾーンの変更
$ sudo timedatectl set-timezone Asia/Tokyo
⇒タイムゾーンを"アジア・東京"に設定する

➢変更を確認
$ timedatectl

〇Javaのインストール
[準備]
$ wget -O - https://apt.corretto.aws/corretto.key | sudo gpg --dearmor -o /usr/share/keyrings/corretto-keyring.gpg &&
echo "deb [signed-by=/usr/share/keyrings/corretto-keyring.gpg] https://apt.corretto.aws stable main" | sudo tee /etc/apt/sources.list.d/corretto.list

⇒Press [ENTER] to continue or Ctrl-c to cancel. が表示されたらENTER キーを押し、次に進む

[インストール]
$ sudo apt-get update; sudo apt-get install -y java-21-amazon-corretto-jdk
⇒"$ java -version"でインストールを確認する

〇Webアプリケーションの公開
1.ホームディレクトリに移動
⇒クローンするリポジトリを保存する場所に移動

$ "cd Quiz"でQuizのリポジトリデータを保存するQuizディレクトリに移動する
⇒"$ pwd"で正しく移動できているかを確認
⇒"/home/isdev24/Quiz"と表示されていれば、確認完了

2.リポジトリのクローン
$ git clone https://github.com/e1b21021/Quiz
⇒"$ ls"を使用し、正しくクローン出来たかどうかを確認する

[リポジトリに移動]
$ cd Quiz
⇒springboot_samples では"Quiz"の箇所が"janken"になっている。

➢"https://github.com/xxx/yyy.git"の部分にTeamごとのgitリポジトリを入力
⇒私たちのチームでは"git@github.com:e1b21021/Quiz.git"を入力

3.Gradle を利用した Web アプリケーションの実行
[gradlewの実行]
$ bash ./gradlew

[プロジェクトの実行]
$ bash ./gradlew bootrun
⇒Team6のサーバにアクセスし、確認する

1.サーバー接続
2.Quizリポジトリに移動する
3.Webアプリケーションの実行 (bash ./gradlew bootrun)
"<==========---> 80% EXECUTING"と表示されていればWebアプリケーションの実行は完了している

〇80番ポートを利用したWebアプリケーションの実行
ポートは通信行うために必要な通信先のアプリケーションを特定するために利用する．
80番にすることでポートの指定をなくすことができる。
javaで1024番ポート以下のポートが利用できるようにする。

$ sudo setcap CAP_NET_BIND_SERVICE+ep /usr/lib/jvm/java-21-amazon-corretto/bin/java
⇒以下で確認を行う
$ sudo getcap /usr/lib/jvm/java-21-amazon-corretto/bin/java
/usr/lib/jvm/java-21-amazon-corretto/bin/java cap_net_bind_service=ep

Quizリポジトリの[Quiz][src][main][resources]フォルダにある
application.propertiesを80番ポートに設定する。
⇒server.port=80
